{"version":3,"sources":["components/Input/Input.module.css","components/SideImage/SideImage.module.css","components/Button/Button.module.css","containers/pages/Homepage/Homepage.module.css","containers/FormData/FormData.module.css","components/Spinner/Spinner.module.css","components/SlipNumber/SlipNumber.module.css","asset/image.svg","components/SideImage/SideImage.js","components/Input/Input.js","components/Button/Button.js","shared/utility.js","components/SlipNumber/SlipNumber.js","containers/FormData/FormData.js","containers/pages/Homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","sideImage","className","classes","ImageHolder","src","homeImage","alt","SideImage","input","props","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","join","elementConfig","value","onChange","changed","options","map","option","displayValue","Input","label","button","Button","btnType","onClick","clicked","children","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","SlipNumber","number","Math","floor","Date","now","random","useHistory","style","textAlign","display","selected","FormData","state","userForm","accountname","type","placeholder","validation","valid","accountnumber","amount","formIsValid","loading","isSubmitted","changingLoadingState","setState","submitFormHandler","event","preventDefault","setTimeout","changeSubmitHandler","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedUserForm","formElementsArray","key","this","id","config","form","onSubmit","formElement","orderHandler","disabled","paddingTop","fontWeight","Component","console","log","Homepage","direction","spacing","width","base","sm","md","App","path","component","withRouter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","breakpoints","createBreakpoints","lg","xl","extendTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30328eb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__E98AD\",\"Label\":\"Input_Label__6fXr9\",\"InputElement\":\"Input_InputElement__1skKN\",\"Invalid\":\"Input_Invalid___HPlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideImage\":\"SideImage_SideImage__9stC1\",\"ImageHolder\":\"SideImage_ImageHolder__2ArRa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__g3Vza\",\"Success\":\"Button_Success__19BIs\",\"Danger\":\"Button_Danger__3ohfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Homepage\":\"Homepage_Homepage__3M5uB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormData\":\"FormData_FormData__I9DNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3sgYB\",\"load2\":\"Spinner_load2__2qdQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SlipNumber\":\"SlipNumber_SlipNumber__QDwSx\"};","export default __webpack_public_path__ + \"static/media/image.6f3ac463.svg\";","import { ClassNames } from '@emotion/react'\r\nimport classes from './SideImage.module.css'\r\nimport React from 'react'\r\nimport homeImage from '../../asset/image.svg'\r\n\r\nconst sideImage = () => (\r\n\r\n    <div className = {classes.ImageHolder}>\r\n\r\n        <img src={homeImage}  alt=\"logo\"  className= {classes.SideImage}/>\r\n\r\n    </div>\r\n\r\n)\r\n\r\n\r\nexport default sideImage","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null\r\n\r\n    const inputClasses = [classes.InputElement]\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n\r\n        inputClasses.push(classes.Invalid)\r\n\r\n    }\r\n\r\n    switch (props.elementType) {\r\n\r\n        case 'input':\r\n            \r\n            inputElement = <input  className= {inputClasses.join(' ')} {...props.elementConfig} value = {props.value} onChange={props.changed}/>\r\n\r\n            break;\r\n\r\n        case 'textarea':\r\n        \r\n            inputElement = <textarea  className= {inputClasses.join(' ')} {...props} onChange={props.changed}/>\r\n            \r\n            break;\r\n\r\n        \r\n        case 'select':\r\n    \r\n            inputElement = (\r\n\r\n                <select  className= {inputClasses.join(' ')} value = {props.value} onChange={props.changed}>\r\n                \r\n                    {props.elementConfig.options.map(option => (\r\n\r\n                        <option value = {option.value} key = {option.value} >{option.displayValue}</option>\r\n\r\n                    ))}\r\n              \r\n                </select>\r\n            \r\n            )\r\n            \r\n            break;\r\n    \r\n        default:    \r\n\r\n            inputElement = <textarea  className= {inputClasses.join(' ')} {...props} onChange={props.changed}/>\r\n            \r\n            break;\r\n    }\r\n\r\n    return (\r\n\r\n        <div className = {classes.Input}>\r\n\r\n            <label>{props.label}</label>\r\n\r\n            {inputElement}\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n  \r\n\r\n\r\nexport default input","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => (\r\n\r\n    <button className = {[classes.Button, classes[props.btnType]].join(' ')} \r\n    onClick = {props.clicked}  onClick = {props.clicked} >{props.children}</button>\r\n\r\n)\r\n\r\n\r\n\r\nexport default button","export const updateObject = (oldObject, updatedProperties) => {\r\n\r\n    return {\r\n\r\n        ...oldObject,\r\n\r\n        ...updatedProperties\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const checkValidity = (value , rules) => {\r\n\r\n    let isValid = true\r\n\r\n    if(rules.required){\r\n\r\n        isValid = value.trim() !== '' && isValid\r\n\r\n    }\r\n\r\n    if(rules.minLength){\r\n\r\n        isValid = value.length >= rules.minLength && isValid\r\n\r\n    }\r\n\r\n    if(rules.maxLength){\r\n\r\n        isValid = value.length <= rules.maxLength && isValid\r\n        \r\n    }\r\n\r\n    return isValid\r\n\r\n}\r\n","import React from 'react'\r\nimport classes from './SlipNumber.module.css'\r\nimport Button  from '../Button/Button'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SlipNumber = (props) => {\r\n\r\n    let number  = Math.floor(Date.now() + Math.random()) \r\n\r\n    const history  = useHistory()\r\n\r\n   \r\n\r\n    return(\r\n\r\n        <div  style ={{textAlign:\"center\"}}>\r\n      \r\n            <h2>Your Deposit Slip Number is {number}</h2>\r\n\r\n            <div style ={{display:\"inline-block\"}}>\r\n\r\n                <Button  clicked = {props.selected} >Go Back</Button>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    )\r\n \r\n}\r\n\r\n\r\nexport default SlipNumber","import React,{Component} from 'react'\r\nimport Input from '../../components/Input/Input'\r\nimport classes from './FormData.module.css'\r\nimport Button from '../../components/Button/Button'\r\nimport {updateObject, checkValidity} from '../../shared/utility'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport SlipNumber from '../../components/SlipNumber/SlipNumber'\r\n\r\nclass FormData extends Component{\r\n\r\n    state = {\r\n\r\n        userForm :{\r\n\r\n            accountname : {\r\n\r\n                elementType  : 'input',\r\n                elementConfig: {\r\n\r\n                    type: 'text',\r\n\r\n                    placeholder:'Full name'\r\n                },\r\n\r\n                value : '',\r\n                validation : {\r\n\r\n                    required:true\r\n                },\r\n\r\n                touched : false,\r\n                valid   : false\r\n\r\n            },\r\n\r\n            accountnumber :  {\r\n\r\n                elementType : 'input',\r\n\r\n                elementConfig:{\r\n\r\n                    type: 'text',\r\n\r\n                    placeholder:'Account Number'\r\n\r\n                },\r\n\r\n                value : '',\r\n                validation:{\r\n\r\n                    required: true,\r\n\r\n                    minLength: 10,\r\n\r\n                    maxLength:10\r\n                    \r\n                },\r\n                touched:false,\r\n\r\n                valid:false\r\n            },\r\n\r\n            amount :  {\r\n\r\n                elementType : 'input',\r\n\r\n                elementConfig:{\r\n\r\n                    type: 'text',\r\n\r\n                    placeholder:'Amount'\r\n\r\n                },\r\n\r\n                value : '',\r\n                validation:{\r\n\r\n                    required: true,\r\n \r\n                },\r\n                touched:false,\r\n\r\n                valid:false\r\n            },\r\n\r\n\r\n        },\r\n\r\n        formIsValid :false,\r\n\r\n        loading:false,\r\n\r\n        isSubmitted:false\r\n\r\n    }\r\n\r\n    changingLoadingState = () => {\r\n\r\n        this.setState({loading:true})\r\n    }\r\n\r\n\r\n    submitFormHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n\r\n        setTimeout(() => {\r\n            \r\n            this.setState({isSubmitted:true})\r\n\r\n        }, 4000)\r\n        \r\n\r\n    }\r\n\r\n    changeSubmitHandler = () =>{\r\n\r\n        this.setState({isSubmitted:false})\r\n    }\r\n    \r\n    inputChangedHandler = (event , inputIdentifier) =>{\r\n\r\n        const updatedFormElement  =  updateObject(this.state.userForm[inputIdentifier], {\r\n\r\n            value   : event.target.value,\r\n\r\n            valid   : checkValidity(event.target.value, this.state.userForm[inputIdentifier].validation),\r\n\r\n            touched : true\r\n\r\n        }) \r\n\r\n\r\n        const updatedUserForm = updateObject( this.state.userForm, {\r\n\r\n            [inputIdentifier] : updatedFormElement\r\n\r\n        })\r\n\r\n\r\n        let formIsValid = true\r\n\r\n        for ( let inputIdentifier in updatedUserForm){\r\n\r\n            formIsValid = updatedUserForm[inputIdentifier].valid && formIsValid\r\n\r\n        }\r\n\r\n\r\n        this.setState({userForm : updatedUserForm , formIsValid: formIsValid})\r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n  \r\n\r\n    render(){\r\n\r\n        const formElementsArray = []\r\n\r\n        for(let key in this.state.userForm){\r\n\r\n            formElementsArray.push({\r\n\r\n                id:key,\r\n\r\n                config: this.state.userForm[key]\r\n\r\n            })\r\n        }\r\n        \r\n\r\n\r\n        let form = (\r\n\r\n            <form onSubmit = {this.submitFormHandler}>  \r\n\r\n                {formElementsArray.map((formElement) => (\r\n                                     \r\n                        <Input elementType = {formElement.config.elementType}\r\n\r\n                            key = {formElement.id}\r\n\r\n                            elementConfig = {formElement.config.elementConfig}\r\n\r\n                            value = {formElement.config.value}\r\n                            \r\n                            changed = {(event) => this.inputChangedHandler(event, formElement.id)}\r\n\r\n                            invalid = {!formElement.config.valid}\r\n\r\n                            shouldValidate = {formElement.config.validation}\r\n\r\n                            touched = {formElement.config.touched}\r\n\r\n                        />\r\n                    )\r\n\r\n                )}\r\n\r\n                <Button btnType=\"Success\" clicked = {this.orderHandler} disabled = {!this.state.formIsValid}>SUBMIT</Button>\r\n\r\n            </form>\r\n\r\n        )\r\n\r\n\r\n        if(this.state.isSubmitted){\r\n\r\n            form = <SlipNumber selected = {this.changeSubmitHandler}/>\r\n\r\n        }\r\n\r\n        return(\r\n            \r\n            <div>\r\n                 <div className = {classes.FormData}>\r\n                \r\n                    <h4 style = {{paddingTop : \"30px\", fontWeight:\"bold\"}}>{this.state.isSubmitted ?  \"Copy your slip Number\" : \"Enter your Payment Details\"}</h4>\r\n\r\n                    {form}\r\n\r\n                </div>\r\n            </div>\r\n                  \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default FormData","import React from 'react'\r\nimport classes from './Homepage.module.css'\r\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\"\r\nimport SideImage from '../../../components/SideImage/SideImage'\r\nimport FormData from '../../FormData/FormData'\r\n\r\nconst Homepage  = () => (\r\n\r\n    <div className = {classes.Homepage}>\r\n        \r\n        <HStack direction={[ \"row\"]} spacing=\"4px\">\r\n            \r\n            <SideImage  width={{ base: \"100%\", sm: \"50%\", md: \"25%\" }}/>\r\n            \r\n            <FormData  width={{ base: \"100%\", sm: \"50%\", md: \"25%\" }}/>\r\n            \r\n        </HStack>\r\n\r\n    </div>\r\n)\r\n\r\nconsole.log(SideImage)\r\n\r\n\r\nexport default Homepage\r\n","import React, {Component} from 'react'\nimport Homepage  from './containers/pages/Homepage/Homepage';\nimport {Route, withRouter}  from 'react-router'\n\n\nclass App extends Component{\n\n\n    render(){\n\n        return (\n\n            <div>\n\n               <Route path =\"/\" component = {Homepage}/>\n\n            </div>\n        )\n    }\n\n}\n\nexport default  withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\"\nimport { extendTheme } from \"@chakra-ui/react\"  \nconst breakpoints = createBreakpoints({\n  sm: \"320px\",\n  md: \"768px\",\n  lg: \"960px\",\n  xl: \"1200px\",\n})\n\n\nconst theme = extendTheme({ breakpoints })\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n        <BrowserRouter>\n           <App />\n        </BrowserRouter>\n       \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}